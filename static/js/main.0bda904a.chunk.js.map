{"version":3,"sources":["log/types.ts","lib.ts","storage/local.ts","component/json-view/JsonView.tsx","component/layout/Footer.tsx","component/layout/Header.tsx","component/molthly-log/CaculatedLog.ts","component/molthly-log/MonthlyLogEditor.tsx","component/molthly-log/MonthlyLogRecord.tsx","component/molthly-log/MonthlyLogTable.tsx","component/molthly-log/MonthlyLog.tsx","component/App.tsx","serviceWorker.ts","index.tsx"],"names":["LeaveType","zerofill","i","concat","toString","HOLIDAYS","LOCAL_STORAGE_KEY","fill","yearMonth","log","day","date","isHoliday","includes","leaveType","WORK","newLog","LocalLogsSet","_this","this","Object","classCallCheck","hash","json","localStorage","getItem","setItem","JSON","parse","entries","forEach","_ref","_ref2","slicedToArray","logs","map","objectSpread","createClass","key","value","_yearMonth$split$map","split","str","parseInt","_yearMonth$split$map2","lastDate","year","month","Date","getDate","lastDateOf","Array","setLogs","_ref3","startedAt","finishedAt","_ref4","_ref5","_ref6","stringify","JsonView","props","react_default","a","createElement","className","format","replace","onChange","e","onLogsChange","target","Footer","viewMode","handleViewModeChange","viewModes","mode","href","rel","Header","onYearMonthChange","yearMonths","ym","parseu","time","undefined","sign","charAt","_abs$split$map","substring","_abs$split$map2","hours","minutes","formatu","abs","Math","floor","rest","SATURDAY","SUNDAY","CaculatedLog","accumulation","isActive","isSaturday","isSunday","weekday","getDay","get","FULL","total","HALF","working","overall","overtime","balance","MonthlyLogEditor","calculatedLog","disabled","readOnly","handleChange","partial","onLogChange","type","MonthlyLogRecord","join","trim","onClick","onActivate","MonthlyLogTable","NOW","TODAY","getFullYear","getMonth","ACCUMULATION","MonthlyLog","_useState","useState","_useState2","activeLog","setActiveLog","_useState3","_useState4","calculatedLogs","setCalculatedLogs","useEffect","activeDate","length","convertLogsToCaculatedLogs","activeByTodays","filter","container","document","getElementById","els","getElementsByClassName","scrollTo","top","item","offsetTop","Fragment","id","MonthlyLogEditor_MonthlyLogEditor","YEAR_MONTH","YEAR_MONTHS","TABLE","name","TEXT","logsSet","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","setYearMonth","getLogs","_useState5","_useState6","setViewMode","handleLogsChange","Header_Header","MonthlyLog_MonthlyLog","JsonView_JsonView","Footer_Footer","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0bda904a.chunk.js","sourcesContent":["export enum LeaveType {\n  WORK = 'WORK',\n  HALF = 'HALF',\n  FULL = 'FULL',\n}\n\nexport interface Log {\n  readonly date: string;\n  readonly isHoliday: boolean;\n  readonly leaveType: LeaveType;\n  readonly startedAt?: string;\n  readonly finishedAt?: string;\n}\n","export function lastDateOf(year: number, month: number): number {\n  return new Date(year, month, 0).getDate();\n}\n\nexport function zerofill(i: number): string {\n  if (i < 10) {\n    return `0${i}`;\n  } else {\n    return i.toString();\n  }\n}\n","import { lastDateOf, zerofill } from \"../lib\";\nimport { Log, LeaveType } from \"../log/types\";\n\nimport { LogsSet } from \"./types\";\n\ntype StoredLog = Pick<Log, 'date' | 'leaveType' | 'startedAt' | 'finishedAt'>;\n\nconst HOLIDAYS = [\n  '2019-05-01',\n  '2019-05-06',\n  '2019-06-06',\n];\n\ninterface Hash<T> {\n  [yearMonth: string]: T[];\n}\n\nconst LOCAL_STORAGE_KEY = 'logsSet';\n\nfunction newLog(yearMonth: string, day: number): Log {\n  const date = `${yearMonth}-${zerofill(day)}`;\n  return {\n    date,\n    isHoliday: HOLIDAYS.includes(date),\n    leaveType: LeaveType.WORK,\n  };\n}\n\nfunction fill(yearMonth: string): (log: Log | null, i: number) => Log {\n  return (log: Log | null, i: number) =>\n    log === null ? newLog(yearMonth, i + 1) : log\n    ;\n}\n\nexport class LocalLogsSet implements LogsSet {\n\n  private readonly hash: Hash<Log> = {}\n\n  public constructor() {\n    const json = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (json === null) {\n      localStorage.setItem(LOCAL_STORAGE_KEY, '{}');\n    } else {\n      const hash: Hash<StoredLog | null> = JSON.parse(json);\n      Object.entries(hash).forEach(([yearMonth, logs]) => {\n        this.hash[yearMonth] = logs.map(\n          (log, i) => {\n            if (log === null) {\n              const date = `${yearMonth}-${zerofill(i + 1)}`;\n              return {\n                date,\n                isHoliday: HOLIDAYS.includes(date),\n                leaveType: LeaveType.WORK,\n              }\n            } else {\n              return {\n                ...log,\n                isHoliday: HOLIDAYS.includes(log.date),\n              }\n            }\n          }\n        );\n      });\n    }\n  }\n\n  public getLogs(yearMonth: string): Log[] {\n    if (yearMonth in this.hash) {\n      return this.hash[yearMonth].map(fill(yearMonth));\n    }\n\n    const [year, month] = yearMonth.split('-').map(str => parseInt(str));\n    const lastDate = lastDateOf(year, month);\n\n    const logs = Array<null>(lastDate).fill(null).map(fill(yearMonth));\n    this.setLogs(yearMonth, logs);\n    return logs;\n  }\n\n  public setLogs(yearMonth: string, logs: Log[]): void {\n    this.hash[yearMonth] = logs.map(\n      ({ date, isHoliday, leaveType, startedAt, finishedAt }) =>\n        ({ date, isHoliday, leaveType, startedAt, finishedAt })\n    );\n\n    const hash: Hash<StoredLog> = {};\n    Object.entries(this.hash).forEach(([yearMonth, logs]) => {\n      hash[yearMonth] = logs.map(\n        ({ date, leaveType, startedAt, finishedAt }) =>\n          ({ date, leaveType, startedAt, finishedAt })\n      );\n    });\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(hash));\n  }\n\n}\n","import React, { ReactElement } from 'react';\nimport format from 'json-format';\n\nimport './JsonView.scss';\n\nimport { Log } from '../../log/types';\n\nexport interface JsonViewProps {\n  logs: Log[];\n  onLogsChange: (logs: Log[]) => void,\n}\n\nexport default function JsonView(props: JsonViewProps): ReactElement {\n  return (\n    <textarea\n      className=\"json-view\"\n      value={format(props.logs).replace(/\\t/g, '  ')}\n      onChange={e => props.onLogsChange(JSON.parse(e.target.value))}\n    />\n  );\n};\n","import React, { ReactElement } from 'react';\n\nimport './Footer.scss';\n\nexport interface FooterProps {\n  viewMode: string;\n  viewModes: string[];\n  handleViewModeChange: (viewMode: string) => void\n}\n\nexport default function Footer(props: FooterProps): ReactElement {\n  return (\n    <footer>\n      <select\n        value={props.viewMode}\n        onChange={e => props.handleViewModeChange(e.target.value)}\n      >\n        {props.viewModes.map(mode => (\n          <option key={mode} value={mode}>{mode}</option>\n        ))}\n      </select>\n      <a\n        href=\"https://github.com/leafriend/working-hours/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >Github</a>\n    </footer>\n  );\n};\n","import React, { ReactElement } from 'react';\n\nimport './Header.scss';\n\nexport interface HeaderProps {\n  yearMonth: string;\n  yearMonths: string[];\n  onYearMonthChange: (yearMonth: string) => void;\n}\n\nexport default function Header(props: HeaderProps): ReactElement {\n  return (\n    <header>\n      Working Hours of\n      {' '}\n      <select\n        value={props.yearMonth}\n        onChange={e => props.onYearMonthChange(e.target.value)}\n      >\n        {props.yearMonths.map(ym => (\n          <option key={ym} value={ym}>{ym}</option>\n        ))}\n      </select>\n    </header>\n  );\n};\n","import { zerofill } from \"../../lib\";\nimport { LeaveType, Log } from \"../../log/types\";\n\nexport function parseu(time: string | undefined): number | undefined {\n  return time === undefined\n    ? undefined\n    : parse(time)\n    ;\n}\n\nexport function parse(time: string): number {\n  const sign = time.charAt(0) === '-' ? -1 : 1;\n  const abs = sign < 0 ? time.substring(1) : time;\n  const [hours, minutes] = abs.split(':').map(str => parseInt(str, 10));\n  return sign * (hours * 60 + minutes);\n}\n\nexport function formatu(minutes: number | undefined): string | undefined {\n  return minutes === undefined\n    ? undefined\n    : format(minutes)\n    ;\n}\n\nexport function format(minutes: number): string {\n  const sign = minutes < 0 ? '-' : ''\n  const abs = Math.abs(minutes);\n  const hours = Math.floor(abs / 60);\n  const rest = abs - (hours * 60);\n  return `${sign}${zerofill(hours)}:${zerofill(rest)}`;\n}\n\nexport interface Accumulation {\n  readonly overall: number;\n  readonly target: number;\n  readonly balance: number\n}\n\nconst SATURDAY = 6;\nconst SUNDAY = 0;\n\nexport class CaculatedLog {\n\n  public readonly isSaturday: boolean;\n\n  public readonly isSunday: boolean;\n\n  public constructor(\n    public log: Log,\n    private readonly accumulation: Accumulation,\n    public isActive: boolean,\n  ) {\n\n    const date = new Date(log.date);\n    const weekday = date.getDay();\n\n    this.isSunday = weekday === SUNDAY;\n    this.isSaturday = weekday === SATURDAY;\n\n  }\n\n  public get date(): string {\n    return this.log.date;\n  }\n\n  public get isHoliday(): boolean {\n    return this.log.isHoliday;\n  }\n\n  public get leaveType(): LeaveType {\n    return this.log.leaveType;\n  }\n\n  public get startedAt(): number | undefined {\n    return parseu(this.log.startedAt);\n  }\n\n  public get finishedAt(): number | undefined {\n    return parseu(this.log.finishedAt);\n  }\n\n  public get working(): number | undefined {\n    if (this.leaveType === LeaveType.FULL) {\n      return 9.5 * 60;\n    }\n\n    if (this.startedAt === undefined || this.finishedAt === undefined) {\n      return undefined;\n    }\n\n    const total = this.finishedAt - this.startedAt;\n\n    const working = (() => {\n      switch (this.leaveType) {\n\n        case LeaveType.HALF:\n          if (total >= 4 * 60) {\n            return 8 * 60;\n          }\n          return 4 * 60 + total;\n\n        case LeaveType.WORK:\n          if (total < (4.5 * 1) * 60) {\n            return total - (30 * (1 - 1));\n\n          } else if (total < (4.5 * 2) * 60) {\n            return total - (30 * (2 - 1));\n\n          } else if (total < (4.5 * 3) * 60) {\n            return total - (30 * (3 - 1));\n\n          } else {\n            return total - 90;\n          }\n      }\n\n    })()\n\n    return working;\n  }\n\n  public get overtime(): number | undefined {\n    if (this.working === undefined) {\n      return undefined;\n    }\n\n    return this.working - (8 * 60);\n  }\n\n  public get overall(): number {\n    if (this.working === undefined) {\n      return this.accumulation.overall;\n    }\n\n    return this.accumulation.overall + this.working;\n  }\n\n  public get target(): number {\n\n    if (this.isHoliday || this.isSaturday || this.isSunday) {\n      return this.accumulation.target;\n    }\n\n    return this.accumulation.target + 8 * 60;\n\n  }\n\n  public get balance(): number {\n    if (this.overtime === undefined) {\n      return this.accumulation.balance;\n    }\n\n    return this.accumulation.balance + this.overtime;\n  }\n\n}\n","import React, { ReactElement } from 'react';\n\nimport './MonthlyLogEditor.scss';\n\nimport { LeaveType, Log } from '../../log/types';\n\nimport { CaculatedLog, formatu } from './CaculatedLog';\n\nexport interface MonthlyLogEditorProps {\n  calculatedLog: CaculatedLog | null;\n  onLogChange: (log: Log) => void,\n}\n\ntype LeaveTypeLog = Pick<Log, 'leaveType'>;\ntype StartedAtLog = Pick<Log, 'startedAt'>;\ntype FinishedAtLog = Pick<Log, 'finishedAt'>;\ntype PartialLog = LeaveTypeLog | StartedAtLog | FinishedAtLog;\n\nexport default function MonthlyLogEditor(props: MonthlyLogEditorProps): ReactElement {\n  const log = props.calculatedLog\n\n  const disabled = log === null || log.isHoliday || log.isSunday || log.isSaturday;\n  const readOnly = log !== null && (log.leaveType === LeaveType.FULL);\n\n  function handleChange(partial: PartialLog) {\n    if (props.calculatedLog === null) {\n      return;\n    }\n\n    const log = {\n      date: props.calculatedLog.date,\n      isHoliday: props.calculatedLog.isHoliday,\n      leaveType: props.calculatedLog.leaveType,\n      startedAt: formatu(props.calculatedLog.startedAt),\n      finishedAt: formatu(props.calculatedLog.finishedAt),\n      ...partial,\n    };\n\n    props.onLogChange(log);\n  }\n\n  const date = log ? log.date : 'Select a date';\n  const leaveType = log ? log.leaveType : LeaveType.WORK;\n  const startedAt = log ? formatu(log.startedAt) || '' : '';\n  const finishedAt = log ? formatu(log.finishedAt) || '' : '';\n\n  return (\n    <div className=\"LogEditor\">\n      <h2>{date}</h2>\n      <div className=\"form-group\">\n        <label>\n          Leave Type:\n          <select\n            disabled={disabled}\n            value={leaveType}\n            onChange={e => handleChange({ leaveType: e.target.value as LeaveType })}\n          >\n            <option value={LeaveType.WORK}>Work</option>\n            <option value={LeaveType.HALF}>Half</option>\n            <option value={LeaveType.FULL}>Full</option>\n          </select>\n        </label>\n        <label>\n          Started:\n          <input\n            disabled={disabled}\n            readOnly={disabled ? false : readOnly}\n            type=\"time\"\n            value={startedAt}\n            onChange={e => handleChange({ startedAt: e.target.value || undefined })}\n          />\n        </label>\n        <label>\n          Finished:\n          <input\n            disabled={disabled}\n            readOnly={disabled ? false : (readOnly || (log ? log.startedAt === undefined : true))}\n            type=\"time\"\n            value={finishedAt}\n            onChange={e => handleChange({ finishedAt: e.target.value || undefined })}\n          />\n        </label>\n      </div>\n    </div>\n  );\n\n}\n","import React, { ReactElement } from 'react';\n\nimport { CaculatedLog, formatu } from './CaculatedLog';\n\nexport interface MonthlyLogRecordProps {\n  log: Readonly<CaculatedLog>;\n  onActivate: (activeDate: string) => void,\n}\n\nexport default function MonthlyLogRecord(props: MonthlyLogRecordProps): ReactElement {\n  return (\n    <tr\n      className={[\n        props.log.isHoliday ? 'holiday' : (\n          props.log.isSunday ? 'sunday' : (\n            props.log.isSaturday ? 'saturday' : ''\n          )\n        ),\n        props.log.isActive ? 'active' : '',\n      ].join(' ').replace(/ +/g, ' ').trim()}\n      onClick={() => props.onActivate(props.log.date)}\n    >\n      <td className=\"date\">{new Date(props.log.date).getDate()}</td>\n      <td>{props.log.leaveType}</td>\n      <td className=\"time\">{formatu(props.log.startedAt) || ''}</td>\n      <td className=\"time\">{formatu(props.log.finishedAt) || ''}</td>\n      <td className=\"time\">{formatu(props.log.working) || ''}</td>\n      <td className=\"time\">{formatu(props.log.overall)}</td>\n      <td className=\"time\">{formatu(props.log.target)}</td>\n      <td className=\"time\">{formatu(props.log.balance)}</td>\n    </tr>\n  );\n}\n","import React, { ReactElement } from 'react';\n\nimport { CaculatedLog } from './CaculatedLog';\n\nimport MonthlyLogRecord from \"./MonthlyLogRecord\";\n\nexport interface MonthlyLogTableProps {\n  logs: CaculatedLog[];\n  onActivate: (activeDate: string) => void,\n}\n\nexport default function MonthlyLogTable(props: MonthlyLogTableProps): ReactElement {\n  return (\n    <table className=\"monthly-logs\">\n      <thead>\n        <tr>\n          <th className=\"date\">D.</th>\n          <th>Leave</th>\n          <th className=\"time\">Start</th>\n          <th className=\"time\">Fin.</th>\n          <th className=\"time\">Work</th>\n          <th className=\"time\">All</th>\n          <th className=\"time\">Target</th>\n          <th className=\"time\">Bal.</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.logs.map(log => (\n          <MonthlyLogRecord\n            key={log.date}\n            log={log}\n            onActivate={props.onActivate}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport './MonthlyLog.scss';\n\nimport { zerofill } from '../../lib';\nimport { Log } from '../../log/types';\n\nimport { Accumulation, CaculatedLog } from './CaculatedLog';\nimport MonthlyLogEditor from './MonthlyLogEditor';\nimport MonthlyLogTable from './MonthlyLogTable';\n\nconst NOW = new Date();\nconst TODAY = `${NOW.getFullYear()}-${zerofill(NOW.getMonth() + 1)}-${zerofill(NOW.getDate())}`;\n\nconst ACCUMULATION: Accumulation = {\n  overall: 0,\n  target: 0,\n  balance: 0,\n};\n\nfunction convertLogsToCaculatedLogs(logs: Log[]): CaculatedLog[] {\n  let accumulation: Accumulation = ACCUMULATION;\n  const calculatedLogs = Array(logs.length);\n  logs.forEach((log, i) => {\n    const calculatedLog = new CaculatedLog(log, accumulation, false);\n    calculatedLogs[i] = calculatedLog;\n    accumulation = calculatedLog;\n  })\n  return calculatedLogs;\n}\n\nexport interface MonthlyLogProps {\n  logs: Log[];\n  onLogsChange: (logs: Log[]) => void,\n}\n\nexport default function MonthlyLog(props: MonthlyLogProps): ReactElement {\n\n  const [activeLog, setActiveLog] = useState<CaculatedLog | null>(null);\n\n  const [calculatedLogs, setCalculatedLogs] = useState<CaculatedLog[]>([]);\n  useEffect(() => {\n    const activeDate = activeLog ? activeLog.date : TODAY;\n    const calculatedLogs = convertLogsToCaculatedLogs(props.logs);\n    const activeByTodays = calculatedLogs.filter(log => log.isActive = log.date === activeDate);\n    if (activeByTodays.length > 0) {\n      setActiveLog(activeByTodays[0]);\n    } else {\n      setActiveLog(null);\n    }\n    setCalculatedLogs(calculatedLogs);\n  }, [props.logs]);\n\n  useEffect(() => {\n    if (calculatedLogs.length > 0) {\n      const container = document.getElementById(`content-container`);\n      const els =  document.getElementsByClassName('active');\n      if (container) {\n        if (els.length > 0) {\n          container.scrollTo({ top: (els.item(0)! as HTMLElement).offsetTop });\n        } else {\n          container.scrollTo({ top: 0 });\n        }\n      }\n    }\n  }, [calculatedLogs]);\n\n  function handleLogChange(log: Log) {\n    calculatedLogs.forEach(calculatedLog => {\n      if (calculatedLog.date === log.date) {\n        calculatedLog.log = log;\n      }\n    });\n    setCalculatedLogs(calculatedLogs);\n\n    const logs = calculatedLogs.map(calculatedLog => calculatedLog.log);\n    props.onLogsChange(logs);\n  }\n\n  function handleActivate(activeDate: string): void {\n    calculatedLogs.forEach(calculatedLog => {\n      calculatedLog.isActive = calculatedLog.date === activeDate;\n      if (calculatedLog.date === activeDate) {\n        setActiveLog(calculatedLog);\n      }\n    });\n    setCalculatedLogs(calculatedLogs);\n  }\n\n  return (\n    <React.Fragment>\n      <div id=\"content-container\">\n        <MonthlyLogTable\n          logs={calculatedLogs}\n          onActivate={handleActivate}\n        />\n      </div>\n      <div>\n        <MonthlyLogEditor\n          calculatedLog={activeLog}\n          onLogChange={handleLogChange}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n","import React, { ReactElement, useState } from 'react';\n\nimport './App.scss';\n\nimport { Log } from '../log/types';\nimport { LocalLogsSet } from '../storage/local';\nimport { LogsSet } from '../storage/types';\n\nimport JsonView from './json-view/JsonView';\nimport Footer from './layout/Footer';\nimport Header from './layout/Header';\nimport MonthlyLog from './molthly-log/MonthlyLog';\n\nconst YEAR_MONTH = '2019-05';\nconst YEAR_MONTHS = [\n  '2019-05',\n  '2019-06',\n];\n\nconst TABLE = MonthlyLog.name;\nconst TEXT = JsonView.name;\n\nconst logsSet: LogsSet = new LocalLogsSet();\n\nexport default function App(): ReactElement {\n  const [yearMonth, setYearMonth] = useState(YEAR_MONTH);\n  const [logs, setLogs] = useState(logsSet.getLogs(yearMonth));\n  const [viewMode, setViewMode] = useState(TABLE);\n\n  function handleYearMonthChange(yearMonth: string) {\n    setYearMonth(yearMonth);\n    setLogs(logsSet.getLogs(yearMonth));\n  }\n\n  function handleLogsChange(logs: Log[]) {\n    setLogs(logs);\n    logsSet.setLogs(YEAR_MONTH, logs);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header\n        yearMonth={yearMonth}\n        yearMonths={YEAR_MONTHS}\n        onYearMonthChange={handleYearMonthChange}\n      />\n      <article>\n        {(() => {\n          switch (viewMode) {\n            case TABLE:\n              return (\n                <MonthlyLog\n                  logs={logs}\n                  onLogsChange={handleLogsChange}\n                />\n              );\n            case TEXT:\n              return (\n                <JsonView\n                  logs={logs}\n                  onLogsChange={handleLogsChange}\n                />\n              );\n            default:\n              return null;\n          }\n\n        })()}\n      </article>\n      <Footer\n        viewMode={viewMode}\n        viewModes={[TABLE, TEXT]}\n        handleViewModeChange={viewMode => setViewMode(viewMode)}\n      />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}